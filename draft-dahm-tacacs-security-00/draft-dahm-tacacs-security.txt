



Operations and Management Area Working Group                     T. Dahm
Internet-Draft                                                          
Intended status: Standards Track                                 D. Gash
Expires: 28 November 2021                            Cisco Systems, Inc.
                                                                  A. Ota
                                                             27 May 2021


               TACACS+ Security, TLS, and SSH Public Keys
                     draft-dahm-tacacs-security-00

Abstract

   The TACACS+ Protocol [RFC8907] provides device administration for
   routers, network access servers and other networked computing devices
   via one or more centralized servers.  This document, a companion to
   the TACACS+ protocol [RFC8907], adds new packet formats to improve
   security and function, adds Transport Layer Security (TLS [RFC8446])
   support, adds support to carry SSH [RFC4716] public keys, and
   deprecates former inferior security mechanisms.

Requirements Language

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in BCP
   14 [RFC2119] [RFC8174] when, and only when, they appear in all
   capitals, as shown here.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on 28 November 2021.






Dahm, et al.            Expires 28 November 2021                [Page 1]

Internet-Draft                 TACACS+ TLS                      May 2021


Copyright Notice

   Copyright (c) 2021 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents (https://trustee.ietf.org/
   license-info) in effect on the date of publication of this document.
   Please review these documents carefully, as they describe your rights
   and restrictions with respect to this document.  Code Components
   extracted from this document must include Simplified BSD License text
   as described in Section 4.e of the Trust Legal Provisions and are
   provided without warranty as described in the Simplified BSD License.

Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   2
   2.  Technical Definitions . . . . . . . . . . . . . . . . . . . .   3
     2.1.  Legacy Connection . . . . . . . . . . . . . . . . . . . .   3
     2.2.  Peer  . . . . . . . . . . . . . . . . . . . . . . . . . .   3
     2.3.  Session . . . . . . . . . . . . . . . . . . . . . . . . .   3
     2.4.  TLS Connection  . . . . . . . . . . . . . . . . . . . . .   4
   3.  TLS for TACACS+ . . . . . . . . . . . . . . . . . . . . . . .   4
     3.1.  Well-Known TCP/IP Port  . . . . . . . . . . . . . . . . .   4
     3.2.  TLS Protocol Version  . . . . . . . . . . . . . . . . . .   5
     3.3.  Cipher Requirements . . . . . . . . . . . . . . . . . . .   5
       3.3.1.  Mandatory Cipher Suites . . . . . . . . . . . . . . .   6
     3.4.  Authentication  . . . . . . . . . . . . . . . . . . . . .   6
       3.4.1.  PSK Identity Requirements . . . . . . . . . . . . . .   7
       3.4.2.  TLS Certificate Identity Requirements . . . . . . . .   7
   4.  Deprecation of TACACS+ PSK and Encryption . . . . . . . . . .   7
   5.  TACACS+ Extended Packet Type  . . . . . . . . . . . . . . . .   8
   6.  Security Considerations . . . . . . . . . . . . . . . . . . .   9
   7.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .  10
   8.  Acknowledgments . . . . . . . . . . . . . . . . . . . . . . .  10
   9.  References  . . . . . . . . . . . . . . . . . . . . . . . . .  10
     9.1.  Normative References  . . . . . . . . . . . . . . . . . .  10
     9.2.  Informative References  . . . . . . . . . . . . . . . . .  11
   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  11

1.  Introduction

   The TACACS+ Protocol [RFC8907] provides device administration for
   routers, network access servers and other networked computing devices
   via one or more centralized servers.  The protocol carries
   authentication, authorization and accounting information for TACACS+
   clients.  While this information is highly sensitive, TACACS+ lacks
   modern and/or effective confidentiality, integrity, and



Dahm, et al.            Expires 28 November 2021                [Page 2]

Internet-Draft                 TACACS+ TLS                      May 2021


   authentication of the connection and network traffic between the
   server and client.

   The existing confidentiality, integrity, and authentication
   mechanisms of TACACS+ are extremely weak.  The Security
   Considerations section of the TACACS+ Protocol [RFC8907] adequately
   describes this.

   To address these flaws, this document updates the TACACS+ Protocol
   [RFC8907] to use TLS [RFC8446] authentication and encryption, and
   deprecates the use of its former mechanisms.

   To support SSH authentication using public keys, highly desired by
   the operator community, this document introduces a method to support
   sending public keys to a TACACS+ client, allowing centralized
   management.

   To accomplish these goals and improve security and functionality when
   a network proxy is involved in a TACACS+ connection, new and uniform
   packet formats are introduced.

2.  Technical Definitions

   The Technical Definitions section of the TACACS+ Protocol [RFC8907]
   is fully applicable here and will not be repeated, though may be
   augmented.  The following terms are also used in this document.

2.1.  Legacy Connection

   This is another term for a Connection as defined in TACACS+ Protocol
   [RFC8907].  It is a Connection without TLS and possibly using legacy
   TACACS+ authentication and obfuscation.

2.2.  Peer

   This refers to a TACACS+ Server or Client.

2.3.  Session

   Defined in TACACS+ Protocol [RFC8907] as a single authentication
   sequence, a single authorization exchange, or a single accounting
   exchange.









Dahm, et al.            Expires 28 November 2021                [Page 3]

Internet-Draft                 TACACS+ TLS                      May 2021


2.4.  TLS Connection

   A TLS Connection is a TCP/IP connection with TLS authentication and
   encruption used by TACACS+ for transport, similar to a Connection as
   defined in TACACS+ Protocol [RFC8907].  The TCP/IP port [TBD] is
   allocated by IANA for this TLS connection.

3.  TLS for TACACS+

   TACACS+ connections are over TCP/IP, initiated by the Client to the
   Server.  The well-known TCP/IP port 49 on the Server is used for
   unencrypted and encrypted connections as defined in the TACACS+
   Protocol [RFC8907].  A connection may be used for only a single
   Session or the multiplexing of multiple Sessions.

   It is mandatory to maintain the confidentiality, integrity, and
   authentication of these connections, as RFC3365 [RFC3365] dictates
   the need for end-to-end security.  The current IETF technology best
   suited for TACACS+ is TLS, which can provide both authentication and
   transport encryption.

3.1.  Well-Known TCP/IP Port

   All data exchanged by TACACS+ Peers MUST be encrypted, including the
   authentication of the Peers.  Therefore, encryption MUST be initiated
   immediately upon the establishment of the TCP/IP connection.  For
   this reason, it is desirable to not use a "STARTTLS" command process
   which is a feature some protocols, that once existed without TLS, use
   to maintain backward compatibility.  Instead, following RFC7605
   [RFC7605], a different well-known system TCP/IP port is assigned port
   [TBD].

   A new port is considered appropriate and superior to "STARTTLS"
   because it allows:

   *  easily blocking the unencrypted or inferiorly encrypted
      connections by the TCP/IP port number,

   *  passive Intrusion Detection Systems (IDS) watching the unencrypted
      version to be unaffected by the introduction of TLS,

   *  avoidance of Man in the Middle (MitM) attacks that can
      affectSTARTTLS,

   *  and helps prevention of the accidental exposure of sensitive
      information due to misconfiguration.





Dahm, et al.            Expires 28 November 2021                [Page 4]

Internet-Draft                 TACACS+ TLS                      May 2021


   However, co-existence of inferior authentication and encryption,
   whether TACACS+ legacy or deprecated parts that compose TLS, also
   presents opportunity for down-grade attacks.  The simplest way to
   address the exposure from TACACS+ legacy methods is to refuse legacy
   TACACS+ connections at the server entirely, perhaps using separate
   servers for legacy and TLS.  Another approach is configuration that
   requires TLS; clients SHOULD allow configuration of TACACS+ servers,
   both globally and per-server, to require TLS and likewise servers
   SHOULD allow configuration to require TLS of clients known to be have
   TLS support.  Furthermore, Peers SHOULD be configurable to limit
   offered or recognized TLS versions and algorithms to those
   recommended by standards bodies and implementers.  XXX another form
   of downgrade attack is to filter/block the TLS port.  make sure this
   is covered in the text.

   Servers and clients could also have a cache mechanism of clients and
   servers, respectively, that have engaged in TACACS+ TLS connections
   and demand TLS from that point forward.  However, this has potential
   to be a Denial of Service (DoS) vector.

3.2.  TLS Protocol Version

   XXX rfc8773 is required to have server/client certificates with PSK
   TACACS+ implementations supporting TLS MUST implement at least TLS
   version 1.3 [RFC8446] until it is deprecated.  However,
   implementations SHOULD also implement newer TLS versions as they
   emerge and MUST abandon TLS versions as they are deprecated,
   including TLS 1.3 and prior versions.

   Clearly deprecation is more difficult for Servers, because support
   for and deployment of new TLS versions to Clients will occur with
   great randomness or perhaps not at all due to End of Support (EoS).
   Therefore, it is of great value to, and implementations MAY, support
   deprecated versions to allow for gradual adoption and software at its
   End of Life (EoL).  A Server that supports deprecated versions SHOULD
   NOT enable this support except by operator configuration.

3.3.  Cipher Requirements

   XXX The IANA registry now has "Recommended" algorithms.  reference
   this for ciphers that should be supported.  As with TLS Protocol
   Versions (Section 3.2), TACACS+ implementations MUST adopt and
   deprecate new cipher suites as they emerge or fade and MAY support
   deprecated cipher suites.  However, cipher suites is a far more
   complex subject because those chosen directly affect the
   effectiveness of the confidentiality, integrity, and authentication
   of TLS, the processing required, and the types of authentication
   available.



Dahm, et al.            Expires 28 November 2021                [Page 5]

Internet-Draft                 TACACS+ TLS                      May 2021


   TACACS+ Servers supporting TLS MUST utilize the TLS encryption
   options described in the following sections.  XXX but should be
   allowed to evolve as TLS does.

3.3.1.  Mandatory Cipher Suites

   TLS 1.2 [RFC5246] allows specifying application profiles prescribing
   which cipher suites to implement for interoperability purposes.  To
   maintain simplicity of current TACACS+ configuration using pre-shared
   secrets, the server implementation MUST implement:

   *  TLS-DHE-PSK-WITH-AES-128-GCM-SHA256

   *  TLS_DHE_PSK_WITH_AES_128_CBC_SHA

   *  TLS_DHE_PSK_WITH_AES_256_CBC_SHA

   A Client MUST implement at least one of the cipher suites which are
   implemented on the Server, and MAY implement all of them.

   Both Clients and Servers MAY implement other cipher suites, but their
   interoperability is not guaranteed and their implementation is
   outside of scope of this document.  XXX again; should allow a way to
   evolve.  how??? XXX russ housley says: Section 3.3.1: Do you want to
   provide any guidance for TLS 1.3?  I would say something like: if TLS
   1.2 is used, then one of the following ciphersuites MUST be used ...
   if TLS 1.3 is used, then one of the following ciphersuites MUST be
   used ...  This is not ideal for the evolution part, but you might
   say: if a version beyond TLS 1.3 is used, then one of the
   ciphersuites that i s marked as "Recommended" MUST be used ... XXX

3.4.  Authentication

   XXX TLS authentication can occur via asymmetric cryptographic or
   Edwards-Curve Digital Signature Algorithm, or various forms of
   symmetric pre-shared-key (PSK). we only consider out of band PSK.
   KDF hash alg needs to be specified?  PSK can only be assoc with one
   HKDF in tls1.3 RPKs - https://tools.ietf.org/html/rfc7250













Dahm, et al.            Expires 28 November 2021                [Page 6]

Internet-Draft                 TACACS+ TLS                      May 2021


3.4.1.  PSK Identity Requirements

   See rfc 8446 s2.2 regarding PSK secret choice Because determining a
   correct PSK value on the server side is a computationally intensive
   operation requiring multiple round trips, a mechanism for hitless key
   change must be defined.  During TLS handshake, a client MUST use PSK
   identity as defined in [RFC4279] to signal to the server which PSK
   value to use.  If server does not recognize PSK identity it MUST
   respond with decrypt_error alert and MUST NOT respond with
   unknown_psk_identity.

   Process to change pre-shared keys on server and client is then:

   1  Add new key with new PSK identity on the server.

   2  Add new key with new PSK identity on the client.

   3  Remove old key with old PSK identity from the client.

   4  Remove old key with old PSK identity from the server.

   XXX reference "key life" in rfc8645 ???

   Note: PSK identity is transmitted in clear text and must not contain
   information which could aid an attacker who can eavesdrop on the
   connection.

3.4.2.  TLS Certificate Identity Requirements

   XXX

4.  Deprecation of TACACS+ PSK and Encryption

   The TACACS+ Protocol [RFC8907] specified a form of encryption and
   Peer authentication using a pre-shared key that is wholly inadequate
   by modern standards and is diminutively referred to as data
   obfuscation in the TACACS+ Protocol [RFC8907].  The introduction of
   TLS PSK and certificate Peer authentication and TLS encryption to
   TACACS+ obsolesces these former mechanisms and so are hereby
   deprecated.  Along with them, the TAC_PLUS_UNENCRYPTED_FLAG flag in
   the TACACS+ header, the least significant bit (LSB) of the flags
   field, is also deprecated.

   Peers compliant with this document should set the
   TAC_PLUS_UNENCRYPTED_FLAG flag in the Packet header of Packets on TLS
   Connections, indicating that the data obfuscation is not used.  A
   Peer that receives a Packet without the flag set on a TLS Connection,
   should immediately log the error and terminate the TCP/IP connection.



Dahm, et al.            Expires 28 November 2021                [Page 7]

Internet-Draft                 TACACS+ TLS                      May 2021


   A Client that is compliant with this document MUST NOT utilize these
   deprecated authentication or encryption methods on TLS Connections.

   A TACACS+ implementation SHOULD, and is encouraged to, offer a
   configuration mechanism to disable non-TLS connections entirely.

   A future document SHOULD be written to deprecate the well-known TCP/
   IP port 49, allocated by the TACACS+ Protocol [RFC8907].

5.  TACACS+ Extended Packet Type

   XXX 1 TACACS+ Header Type minor_version This is the minor TACACS+
   version number.  TAC_PLUS_MINOR_VER_TWO := 0x2 type This is the
   packet type.  Legal values are: TAC_PLUS_AUTHEN := 0x01
   (Authentication) TAC_PLUS_AUTHOR := 0x02 (Authorization)
   TAC_PLUS_ACCT := 0x03 (Accounting) TAC_PLUS_EXT := 0x04 (Extended) 2
   TACACS+ Extended Packet Type The purpose of this new packet type is
   to allow: 1) Larger Data Values 2) Authentication Packets to include
   arbitrary arguments It is possible to encode the previous 3 packet
   types using the Pre Defined Ar gument names.  The pattern is intended
   to follow the style of the original TACACS+ packets, however there
   are a few minor differences from the legacy arguments: 1) The
   argument value size specified by 32 bit 2) The name and value are no
   longer in the same field with the separator.  Ins tead both the name
   and the argument have lengths in bytes, and the argument type is
   indicated by the last char in the name.  +----------------+----------
   ------+----------------+----------------+ | arg_count ...  +---------
   -------+----------------+----------------+----------------+ |
   arg_1_name_len | +----------------+ | arg_1_value_len ...  +---------
   -------+----------------+----------------+----------------+ |
   arg_2_name_len | +----------------+ | arg_2_value_len ...  | +-------
   ---------+----------------+----------------+----------------+ | ...
    | +----------------+----------------+----------------+--------------
   --+ | arg_N_name_len | +----------------+ | arg_N_value_len | +------
   ----------+----------------+----------------+----------------+ |
   arg_1_name ...  +----------------+----------------+----------------+-
   ---------------+ | arg_1_value ...  +----------------+---------------
   -+----------------+----------------+ | arg_2_name ...  +-------------
   ---+----------------+----------------+----------------+ | arg_2_value
   ...  +----------------+----------------+----------------+------------
   ----+ | ...  +----------------+----------------+----------------+----
   ------------+ | arg_N_name ...  +----------------+----------------+--
   --------------+----------------+ | arg_N_value ...
   +----------------+----------------+----------------+----------------+
   arg_count The number of arguments in the packet arg_1_name_len ...
   arg_N_name_len The size of the Name part of each argument, including
   the final Mandatory/Opt ioanl Char.  The maximum size is 2^8 -1
   bytes.  arg_1_value_len ... arg_N_value_len The size of the Value



Dahm, et al.            Expires 28 November 2021                [Page 8]

Internet-Draft                 TACACS+ TLS                      May 2021


   part of each argument, including the final Mandatory/Op tioanl Char.
   The maximum size is 2^32 -1 bytes.  arg_1_name ... arg_N_name The
   name part of each argument, MUST include the final Mandatory/Optional
   Cha r (* or =) at the end.  The name is encoded using same
   specifications as the argument names in previous TACACS+
   authorization and accou nting packets, arg_1_name ... arg_N_name The
   value part of each argument, including the final Mandatory/Optional
   Char.  Pre Defined Argument Names The predefined names are intended
   to cover the full set of hardwired fields i n the regular packet
   types 1-3.  The purpose of reflecting them here is to ensure that the
   older packet types can be transported using the ne w packet type with
   no ambiguity to the naming (because these fields were previously
   fixed, they did not require names).  The convention follows th e
   pattern for cisco AV-PAIRS in RADIUS: all lower case with dash as
   whitespace.  Note that one new item is added: origin-client.  This is
   added to allow the se rver to identify the first NAS that was hit to
   properly support the proxy case.  type= authentication-action=
   authentication-type= authentication-service= authentication-method*
   privilege-level* user= port* remote-address* origin-client* data=
   server-message* user-message* status= flags+ Extension Arguments
   (Group 1: Legacy) Previously in Authorization and Accounting packets
   there were a set of define d arguments.  These will also be encoded,
   where needed, as arguments here.  Extension Arguments (Group 2: New)
   In addition to the Predefined arguments and the Legacy arguments, all
   the New arguments for novel use cases will be encoded as arguments
   here.

6.  Security Considerations

   This document improves the confidentiality, integrity, and
   authentication of the connection and network traffic between the
   TACACS+ Peers by adding TLS support.  This does not in itself protect
   the server nor clients; the operator and equipment vendors have a
   role.  That role is to diligently follow current best practices for
   maintaining the integrity of network devices and selection of TLS key
   and encryption algorithms.

   It is not and never will be reasonable to expect RFCs be updated in
   perpetuity as each new TLS version and/or algorithm emerges nor at a
   rate to keep pace.  It would be highly desirable for the TLS working
   group to publish a single document that evolves with TLS and its
   algorithms that RFCs such as this one could reference without the
   need to update those RFCs, thus allowing them to evolve by
   inheritance.  As no such document exists, implementers and operators
   SHOULD make informed use of RFCs to determine which TLS versions and
   algorithms should be supported, deprecated, or abandoned, in the
   absence of updates to this RFC.




Dahm, et al.            Expires 28 November 2021                [Page 9]

Internet-Draft                 TACACS+ TLS                      May 2021


   TLS encryption SHOULD be used in deployments when both the clients
   and servers support it.  Servers that support TLS encryption MAY be
   configured to allow Legacy Connections when TLS encryption is not
   supported by the client, but this is NOT RECOMMENDED because of the
   threat of downgrade attacks, as described in Section 3.1.  Legacy
   Connections would be better served by separate Servers from the TLS
   Servers.

   It is NOT RECOMMENDED to deploy TACACS+ without TLS authentication
   and encryption, except for test and debug environments.

7.  IANA Considerations

   The authors request that, when this draft is accepted by the working
   group, the OPSAWG Chairs submit a request to IANA for an early
   allocation, per RFC4020 [RFC4020] and RFC6335 [RFC6335], of a new
   well-known system TCP/IP port number for "tacacss", described as
   "TACACS+ over TLS".  The name "tacacss" follows the common practice
   of appending an "s" to the name given to the non-TLS well-known port.
   This allocation is justified in Section 3.1.

   RFC EDITOR: this port number should replace "[TBD]" within this
   document.

8.  Acknowledgments

   The author(s) would like to thank Russ Housley, Steven M.  Bellovin,
   and Stephen Farrell for their support, insightful review, and/or
   comments.

9.  References

9.1.  Normative References

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/info/rfc2119>.

   [RFC4279]  Eronen, P., Ed. and H. Tschofenig, Ed., "Pre-Shared Key
              Ciphersuites for Transport Layer Security (TLS)",
              RFC 4279, DOI 10.17487/RFC4279, December 2005,
              <https://www.rfc-editor.org/info/rfc4279>.

   [RFC4716]  Galbraith, J. and R. Thayer, "The Secure Shell (SSH)
              Public Key File Format", RFC 4716, DOI 10.17487/RFC4716,
              November 2006, <https://www.rfc-editor.org/info/rfc4716>.




Dahm, et al.            Expires 28 November 2021               [Page 10]

Internet-Draft                 TACACS+ TLS                      May 2021


   [RFC5246]  Dierks, T. and E. Rescorla, "The Transport Layer Security
              (TLS) Protocol Version 1.2", RFC 5246,
              DOI 10.17487/RFC5246, August 2008,
              <https://www.rfc-editor.org/info/rfc5246>.

   [RFC8174]  Leiba, B., "Ambiguity of Uppercase vs Lowercase in RFC
              2119 Key Words", BCP 14, RFC 8174, DOI 10.17487/RFC8174,
              May 2017, <https://www.rfc-editor.org/info/rfc8174>.

   [RFC8446]  Rescorla, E., "The Transport Layer Security (TLS) Protocol
              Version 1.3", RFC 8446, DOI 10.17487/RFC8446, August 2018,
              <https://www.rfc-editor.org/info/rfc8446>.

   [RFC8907]  Dahm, T., Ota, A., Medway Gash, D.C., Carrel, D., and L.
              Grant, "The Terminal Access Controller Access-Control
              System Plus (TACACS+) Protocol", RFC 8907,
              DOI 10.17487/RFC8907, September 2020,
              <https://www.rfc-editor.org/info/rfc8907>.

9.2.  Informative References

   [RFC3365]  Schiller, J., "Strong Security Requirements for Internet
              Engineering Task Force Standard Protocols", BCP 61,
              RFC 3365, DOI 10.17487/RFC3365, August 2002,
              <https://www.rfc-editor.org/info/rfc3365>.

   [RFC4020]  Kompella, K. and A. Zinin, "Early IANA Allocation of
              Standards Track Code Points", RFC 4020,
              DOI 10.17487/RFC4020, February 2005,
              <https://www.rfc-editor.org/info/rfc4020>.

   [RFC6335]  Cotton, M., Eggert, L., Touch, J., Westerlund, M., and S.
              Cheshire, "Internet Assigned Numbers Authority (IANA)
              Procedures for the Management of the Service Name and
              Transport Protocol Port Number Registry", BCP 165,
              RFC 6335, DOI 10.17487/RFC6335, August 2011,
              <https://www.rfc-editor.org/info/rfc6335>.

   [RFC7605]  Touch, J., "Recommendations on Using Assigned Transport
              Port Numbers", BCP 165, RFC 7605, DOI 10.17487/RFC7605,
              August 2015, <https://www.rfc-editor.org/info/rfc7605>.

Authors' Addresses

   Thorsten Dahm

   Email: thorsten.dahm@gmail.com




Dahm, et al.            Expires 28 November 2021               [Page 11]

Internet-Draft                 TACACS+ TLS                      May 2021


   Douglas Gash
   Cisco Systems, Inc.

   Email: dcmgash@cisco.com


   Andrej Ota

   Email: andrej@ota.si










































Dahm, et al.            Expires 28 November 2021               [Page 12]
